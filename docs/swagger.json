{
    "swagger": "2.0",
    "info": {
        "description": "A distributed health check system",
        "title": "Apollo",
        "contact": {
            "name": "DeepSource",
            "url": "https://deepsource.io/"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Get health status of a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get health status of a service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.Response"
                        }
                    }
                }
            }
        },
        "/health/:id": {
            "get": {
                "description": "Get health of all services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get health of all services",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.Response"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "register new service, returns name and URI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Register new service",
                "parameters": [
                    {
                        "description": "Register body:",
                        "name": "parameter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dependency.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.Domain"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dependency.RegisterRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "TODO: probably should use a UUID",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "health.Domain": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "health.Response": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/health.Result"
                    }
                }
            }
        },
        "health.Result": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        }
    }
}